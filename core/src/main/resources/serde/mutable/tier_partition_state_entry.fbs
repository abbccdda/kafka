/*
 Copyright 2019 Confluent Inc.
 */

include "../immutable/uuid.fbs";
namespace kafka.tier.serdes;

// DO NOT REUSE FIELD IDS AS THIS WILL BREAK FORWARD AND BACKWARD COMPAT
// INSTEAD MARK THEM AS DEPRECATED
// e.g. myfield:byte (id: 9, deprecated)

enum ObjectState: byte {
  SEGMENT_UPLOAD_INITIATE = 0,
  SEGMENT_UPLOAD_COMPLETE = 1,
  SEGMENT_DELETE_INITIATE = 2,
  SEGMENT_DELETE_COMPLETE = 3,
  SEGMENT_FENCED = 4
}

table TierPartitionStateEntry {
  version: byte (id: 0);
  tierEpoch: int (id: 1);
  objectId: UUID (id: 2);
  baseOffset: long (id: 3);
  endOffsetDelta: int (id: 4);
  maxTimestamp: long (id: 5);
  size: int (id: 6);
  state: ObjectState (id: 7);
  hasEpochState: bool (id: 8);
  hasAbortedTxns: bool (id: 9);
  hasProducerState: bool (id: 10);
}

root_type TierPartitionStateEntry;

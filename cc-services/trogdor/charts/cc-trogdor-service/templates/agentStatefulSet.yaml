apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: "{{ template "trogdor.name" . }}-agent"
  labels:
    app: "{{ template "trogdor.name" . }}-agent"
    chart: {{ template "trogdor.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: "{{ template "trogdor.name" . }}-agent"
  replicas: {{ .Values.agentReplicaCount }}
  selector:
    matchLabels:
      app: "{{ template "trogdor.name" . }}-agent"
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: "{{ template "trogdor.name" . }}-agent"
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: "config-volume"
          configMap:
            name: {{ .Chart.Name }}-config
        - name: "jvm-config-volume"
          configMap:
            name: {{ .Chart.Name }}-sharedjvmconfig
        - name: "log-volume"
          hostPath:
            path: /var/log/caas/trogdor
            type: ""
      securityContext:
        allowPrivilegeEscalation: true
        hostIPC: true
        hostPID: true
        privileged: true
      hostPID: true
      hostIPC: true
      containers:
        - name: {{ .Chart.Name }}
          {{- if eq .Values.image.tag "latest" }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ default .Chart.Version .Values.image.tag }}"
          {{- else }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:v{{ default .Chart.Version .Values.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: "config-volume"
              mountPath: /mnt/config
            - name: "jvm-config-volume"
              mountPath: /opt/caas/config/trogdor
            - name: "log-volume"
              mountPath: /mnt/log
          env:
            - name: EXTRA_CLASS_ARGS
              value: "--agent.config /mnt/config/config.json"
            - name: CAAS_POD_ID
              value: "1"
          ports:
            - containerPort: 28130
              hostPort: 28130
              name: schedule-alone # ensure this pod is scheduled alone
              protocol: TCP
            - name: agent
              containerPort: {{ .Values.trogdorAgentPort }}
              protocol: TCP
            - name: jmx
              containerPort: {{ .Values.trogdorJmxPort}}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /agent/uptime
              port: {{ .Values.trogdorAgentPort }}
            timeoutSeconds: 15
            failureThreshold: 4
          readinessProbe:
            httpGet:
              path: /agent/uptime
              port: {{ .Values.trogdorAgentPort }}
            timeoutSeconds: 15
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.agentAffinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}